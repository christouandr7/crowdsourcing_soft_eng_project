import { __spread } from 'tslib';
import { Component, Input, Output, EventEmitter, ChangeDetectorRef, NgModule } from '@angular/core';
import { BrowserModule } from '@angular/platform-browser';

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
var MatNumberSpinnerComponent = /** @class */ (function () {
    function MatNumberSpinnerComponent(cdr) {
        var _this = this;
        this.cdr = cdr;
        this.classSpinner = "";
        this.valueChange = new EventEmitter();
        this.increase = 1;
        this.decrease = 1;
        this.fix = 1;
        this.add = function (a, b) { return a + b; };
        this.substract = function (a, b) { return a - b; };
        this.parse = function () {
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i] = arguments[_i];
            }
            return args.map(function (value) { return _this.handleParse(value); });
        };
        this.operation = function (f, g) { return function () {
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i] = arguments[_i];
            }
            return _this.handleParse(g.apply(void 0, __spread(f.apply(void 0, __spread(args)))));
        }; };
    }
    /**
     * @return {?}
     */
    MatNumberSpinnerComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        this.cdr.detectChanges();
    };
    /**
     * @return {?}
     */
    MatNumberSpinnerComponent.prototype.up = /**
     * @return {?}
     */
    function () {
        var /** @type {?} */ result = this.operation(this.parse, this.add);
        this.value = result(this.value, this.increase);
        this.valueChange.emit(this.value);
    };
    /**
     * @return {?}
     */
    MatNumberSpinnerComponent.prototype.down = /**
     * @return {?}
     */
    function () {
        var /** @type {?} */ result = this.operation(this.parse, this.substract);
        this.value = result(this.value, this.decrease);
        this.valueChange.emit(this.value);
    };
    /**
     * @param {?} value
     * @return {?}
     */
    MatNumberSpinnerComponent.prototype.handleParse = /**
     * @param {?} value
     * @return {?}
     */
    function (value) {
        return +parseFloat(value).toFixed(this.fix);
    };
    MatNumberSpinnerComponent.decorators = [
        { type: Component, args: [{
                    selector: "uix-mat-number-spinner",
                    template: "\n  <div class=\"uix-spinner-arrows\">\n    <div [ngClass]=\"['uix-spinner-'+classSpinner]\">\n      <i class=\"uix-spinner-up\" (click)=\"up()\">\n        <div class=\"uix-spinner-arrow uix-spinner-arrow-up\"></div>\n      </i>\n      <i class=\"uix-spinner-down\" (click)=\"down()\">\n        <div class=\"uix-spinner-arrow uix-spinner-arrow-down\"></div>\n      </i>\n    </div>\n  </div>\n  ",
                    styles: ["::ng-deep uix-mat-number-spinner+input[type=number]::-webkit-inner-spin-button,input[type=number]::-webkit-outer-spin-button{-webkit-appearance:none;margin:0}.uix-spinner-outline .uix-spinner-up{top:18px}.uix-spinner-outline .uix-spinner-down{top:47px}.uix-spinner-arrows{position:absolute;width:20px;left:auto;right:-10px;top:-23px;z-index:999999999999}.uix-spinner-arrow{border:solid #636363;border-width:0 2px 2px 0;display:inline-block;padding:3px}.uix-spinner-arrow-up{transform:rotate(-135deg);-webkit-transform:rotate(-135deg)}.uix-spinner-arrow-down{transform:rotate(45deg);-webkit-transform:rotate(45deg)}.uix-spinner-up{top:5px;width:13px;position:absolute;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;-o-user-select:none;user-select:none}.uix-spinner-up:hover .uix-spinner-arrow{border:solid #73c0ff;border-width:0 2px 2px 0}.uix-spinner-down{top:30px;width:13px;position:absolute;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;-o-user-select:none;user-select:none}.uix-spinner-down:hover .uix-spinner-arrow{border:solid #73c0ff;border-width:0 2px 2px 0}"]
                },] },
    ];
    /** @nocollapse */
    MatNumberSpinnerComponent.ctorParameters = function () { return [
        { type: ChangeDetectorRef }
    ]; };
    MatNumberSpinnerComponent.propDecorators = {
        classSpinner: [{ type: Input, args: ["type",] }],
        value: [{ type: Input }],
        valueChange: [{ type: Output }],
        increase: [{ type: Input }],
        decrease: [{ type: Input }],
        fix: [{ type: Input }]
    };
    return MatNumberSpinnerComponent;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
var UixMatNumberSpinnerModule = /** @class */ (function () {
    function UixMatNumberSpinnerModule() {
    }
    UixMatNumberSpinnerModule.decorators = [
        { type: NgModule, args: [{
                    imports: [BrowserModule],
                    declarations: [MatNumberSpinnerComponent],
                    exports: [MatNumberSpinnerComponent]
                },] },
    ];
    return UixMatNumberSpinnerModule;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */

export { MatNumberSpinnerComponent, UixMatNumberSpinnerModule };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidWl4LW1hdC1udW1iZXItc3Bpbm5lci5qcy5tYXAiLCJzb3VyY2VzIjpbIm5nOi8vdWl4LW1hdC1udW1iZXItc3Bpbm5lci9saWIvbWF0LW51bWJlci1zcGlubmVyLmNvbXBvbmVudC50cyIsIm5nOi8vdWl4LW1hdC1udW1iZXItc3Bpbm5lci9saWIvdWl4LW1hdC1udW1iZXItc3Bpbm5lci5tb2R1bGUudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgQ29tcG9uZW50LFxuICBPbkluaXQsXG4gIElucHV0LFxuICBPdXRwdXQsXG4gIEV2ZW50RW1pdHRlcixcbiAgQ2hhbmdlRGV0ZWN0b3JSZWZcbn0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcbmltcG9ydCB7IE5VTUJFUl9GT1JNQVRfUkVHRVhQIH0gZnJvbSBcIkBhbmd1bGFyL2NvbW1vbi9zcmMvaTE4bi9mb3JtYXRfbnVtYmVyXCI7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogXCJ1aXgtbWF0LW51bWJlci1zcGlubmVyXCIsXG4gIHRlbXBsYXRlOiBgXG4gIDxkaXYgY2xhc3M9XCJ1aXgtc3Bpbm5lci1hcnJvd3NcIj5cbiAgICA8ZGl2IFtuZ0NsYXNzXT1cIlsndWl4LXNwaW5uZXItJytjbGFzc1NwaW5uZXJdXCI+XG4gICAgICA8aSBjbGFzcz1cInVpeC1zcGlubmVyLXVwXCIgKGNsaWNrKT1cInVwKClcIj5cbiAgICAgICAgPGRpdiBjbGFzcz1cInVpeC1zcGlubmVyLWFycm93IHVpeC1zcGlubmVyLWFycm93LXVwXCI+PC9kaXY+XG4gICAgICA8L2k+XG4gICAgICA8aSBjbGFzcz1cInVpeC1zcGlubmVyLWRvd25cIiAoY2xpY2spPVwiZG93bigpXCI+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJ1aXgtc3Bpbm5lci1hcnJvdyB1aXgtc3Bpbm5lci1hcnJvdy1kb3duXCI+PC9kaXY+XG4gICAgICA8L2k+XG4gICAgPC9kaXY+XG4gIDwvZGl2PlxuICBgLFxuICBzdHlsZXM6IFtgOjpuZy1kZWVwIHVpeC1tYXQtbnVtYmVyLXNwaW5uZXIraW5wdXRbdHlwZT1udW1iZXJdOjotd2Via2l0LWlubmVyLXNwaW4tYnV0dG9uLGlucHV0W3R5cGU9bnVtYmVyXTo6LXdlYmtpdC1vdXRlci1zcGluLWJ1dHRvbnstd2Via2l0LWFwcGVhcmFuY2U6bm9uZTttYXJnaW46MH0udWl4LXNwaW5uZXItb3V0bGluZSAudWl4LXNwaW5uZXItdXB7dG9wOjE4cHh9LnVpeC1zcGlubmVyLW91dGxpbmUgLnVpeC1zcGlubmVyLWRvd257dG9wOjQ3cHh9LnVpeC1zcGlubmVyLWFycm93c3twb3NpdGlvbjphYnNvbHV0ZTt3aWR0aDoyMHB4O2xlZnQ6YXV0bztyaWdodDotMTBweDt0b3A6LTIzcHg7ei1pbmRleDo5OTk5OTk5OTk5OTl9LnVpeC1zcGlubmVyLWFycm93e2JvcmRlcjpzb2xpZCAjNjM2MzYzO2JvcmRlci13aWR0aDowIDJweCAycHggMDtkaXNwbGF5OmlubGluZS1ibG9jaztwYWRkaW5nOjNweH0udWl4LXNwaW5uZXItYXJyb3ctdXB7dHJhbnNmb3JtOnJvdGF0ZSgtMTM1ZGVnKTstd2Via2l0LXRyYW5zZm9ybTpyb3RhdGUoLTEzNWRlZyl9LnVpeC1zcGlubmVyLWFycm93LWRvd257dHJhbnNmb3JtOnJvdGF0ZSg0NWRlZyk7LXdlYmtpdC10cmFuc2Zvcm06cm90YXRlKDQ1ZGVnKX0udWl4LXNwaW5uZXItdXB7dG9wOjVweDt3aWR0aDoxM3B4O3Bvc2l0aW9uOmFic29sdXRlO2N1cnNvcjpwb2ludGVyOy13ZWJraXQtdXNlci1zZWxlY3Q6bm9uZTstbW96LXVzZXItc2VsZWN0Om5vbmU7LW1zLXVzZXItc2VsZWN0Om5vbmU7LW8tdXNlci1zZWxlY3Q6bm9uZTt1c2VyLXNlbGVjdDpub25lfS51aXgtc3Bpbm5lci11cDpob3ZlciAudWl4LXNwaW5uZXItYXJyb3d7Ym9yZGVyOnNvbGlkICM3M2MwZmY7Ym9yZGVyLXdpZHRoOjAgMnB4IDJweCAwfS51aXgtc3Bpbm5lci1kb3due3RvcDozMHB4O3dpZHRoOjEzcHg7cG9zaXRpb246YWJzb2x1dGU7Y3Vyc29yOnBvaW50ZXI7LXdlYmtpdC11c2VyLXNlbGVjdDpub25lOy1tb3otdXNlci1zZWxlY3Q6bm9uZTstbXMtdXNlci1zZWxlY3Q6bm9uZTstby11c2VyLXNlbGVjdDpub25lO3VzZXItc2VsZWN0Om5vbmV9LnVpeC1zcGlubmVyLWRvd246aG92ZXIgLnVpeC1zcGlubmVyLWFycm93e2JvcmRlcjpzb2xpZCAjNzNjMGZmO2JvcmRlci13aWR0aDowIDJweCAycHggMH1gXVxufSlcbmV4cG9ydCBjbGFzcyBNYXROdW1iZXJTcGlubmVyQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcbiAgQElucHV0KFwidHlwZVwiKSBjbGFzc1NwaW5uZXI6IHN0cmluZyA9IFwiXCI7XG4gIEBJbnB1dCgpIHZhbHVlOiBudW1iZXI7XG4gIEBPdXRwdXQoKSB2YWx1ZUNoYW5nZSA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcbiAgQElucHV0KCkgaW5jcmVhc2U6IG51bWJlciA9IDE7XG4gIEBJbnB1dCgpIGRlY3JlYXNlOiBudW1iZXIgPSAxO1xuICBASW5wdXQoKSBmaXg6IG51bWJlciA9IDE7XG5cbiAgYWRkID0gKGEsIGIpID0+IGEgKyBiO1xuICBzdWJzdHJhY3QgPSAoYSwgYikgPT4gYSAtIGI7XG4gIHBhcnNlID0gKC4uLmFyZ3MpID0+IGFyZ3MubWFwKHZhbHVlID0+IHRoaXMuaGFuZGxlUGFyc2UodmFsdWUpKTtcbiAgb3BlcmF0aW9uID0gKGYsIGcpID0+ICguLi5hcmdzKSA9PiB0aGlzLmhhbmRsZVBhcnNlKGcoLi4uZiguLi5hcmdzKSkpO1xuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgY2RyOiBDaGFuZ2VEZXRlY3RvclJlZikge31cblxuICBuZ09uSW5pdCgpIHtcbiAgICB0aGlzLmNkci5kZXRlY3RDaGFuZ2VzKCk7XG4gIH1cblxuICB1cCgpIHtcbiAgICBjb25zdCByZXN1bHQgPSB0aGlzLm9wZXJhdGlvbih0aGlzLnBhcnNlLCB0aGlzLmFkZCk7XG4gICAgdGhpcy52YWx1ZSA9IHJlc3VsdCh0aGlzLnZhbHVlLCB0aGlzLmluY3JlYXNlKTtcbiAgICB0aGlzLnZhbHVlQ2hhbmdlLmVtaXQodGhpcy52YWx1ZSk7XG4gIH1cblxuICBkb3duKCkge1xuICAgIGNvbnN0IHJlc3VsdCA9IHRoaXMub3BlcmF0aW9uKHRoaXMucGFyc2UsIHRoaXMuc3Vic3RyYWN0KTtcbiAgICB0aGlzLnZhbHVlID0gcmVzdWx0KHRoaXMudmFsdWUsIHRoaXMuZGVjcmVhc2UpO1xuICAgIHRoaXMudmFsdWVDaGFuZ2UuZW1pdCh0aGlzLnZhbHVlKTtcbiAgfVxuXG4gIGhhbmRsZVBhcnNlKHZhbHVlOiBhbnkpOiBudW1iZXIge1xuICAgIHJldHVybiArcGFyc2VGbG9hdCh2YWx1ZSkudG9GaXhlZCh0aGlzLmZpeCk7XG4gIH1cbn1cbiIsImltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcbmltcG9ydCB7IE1hdE51bWJlclNwaW5uZXJDb21wb25lbnQgfSBmcm9tIFwiLi9tYXQtbnVtYmVyLXNwaW5uZXIuY29tcG9uZW50XCI7XG5pbXBvcnQgeyBCcm93c2VyTW9kdWxlIH0gZnJvbSBcIkBhbmd1bGFyL3BsYXRmb3JtLWJyb3dzZXJcIjtcblxuQE5nTW9kdWxlKHtcbiAgaW1wb3J0czogW0Jyb3dzZXJNb2R1bGVdLFxuICBkZWNsYXJhdGlvbnM6IFtNYXROdW1iZXJTcGlubmVyQ29tcG9uZW50XSxcbiAgZXhwb3J0czogW01hdE51bWJlclNwaW5uZXJDb21wb25lbnRdXG59KVxuZXhwb3J0IGNsYXNzIFVpeE1hdE51bWJlclNwaW5uZXJNb2R1bGUge31cbiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7SUF1Q0UsbUNBQW9CLEdBQXNCO1FBQTFDLGlCQUE4QztRQUExQixRQUFHLEdBQUgsR0FBRyxDQUFtQjs0QkFaSixFQUFFOzJCQUVoQixJQUFJLFlBQVksRUFBRTt3QkFDZCxDQUFDO3dCQUNELENBQUM7bUJBQ04sQ0FB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