/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import { Component, Input, Output, EventEmitter, ChangeDetectorRef } from "@angular/core";
export class MatNumberSpinnerComponent {
    /**
     * @param {?} cdr
     */
    constructor(cdr) {
        this.cdr = cdr;
        this.classSpinner = "";
        this.valueChange = new EventEmitter();
        this.increase = 1;
        this.decrease = 1;
        this.fix = 1;
        this.add = (a, b) => a + b;
        this.substract = (a, b) => a - b;
        this.parse = (...args) => args.map(value => this.handleParse(value));
        this.operation = (f, g) => (...args) => this.handleParse(g(...f(...args)));
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.cdr.detectChanges();
    }
    /**
     * @return {?}
     */
    up() {
        const /** @type {?} */ result = this.operation(this.parse, this.add);
        this.value = result(this.value, this.increase);
        this.valueChange.emit(this.value);
    }
    /**
     * @return {?}
     */
    down() {
        const /** @type {?} */ result = this.operation(this.parse, this.substract);
        this.value = result(this.value, this.decrease);
        this.valueChange.emit(this.value);
    }
    /**
     * @param {?} value
     * @return {?}
     */
    handleParse(value) {
        return +parseFloat(value).toFixed(this.fix);
    }
}
MatNumberSpinnerComponent.decorators = [
    { type: Component, args: [{
                selector: "uix-mat-number-spinner",
                template: `
  <div class="uix-spinner-arrows">
    <div [ngClass]="['uix-spinner-'+classSpinner]">
      <i class="uix-spinner-up" (click)="up()">
        <div class="uix-spinner-arrow uix-spinner-arrow-up"></div>
      </i>
      <i class="uix-spinner-down" (click)="down()">
        <div class="uix-spinner-arrow uix-spinner-arrow-down"></div>
      </i>
    </div>
  </div>
  `,
                styles: [`::ng-deep uix-mat-number-spinner+input[type=number]::-webkit-inner-spin-button,input[type=number]::-webkit-outer-spin-button{-webkit-appearance:none;margin:0}.uix-spinner-outline .uix-spinner-up{top:18px}.uix-spinner-outline .uix-spinner-down{top:47px}.uix-spinner-arrows{position:absolute;width:20px;left:auto;right:-10px;top:-23px;z-index:999999999999}.uix-spinner-arrow{border:solid #636363;border-width:0 2px 2px 0;display:inline-block;padding:3px}.uix-spinner-arrow-up{transform:rotate(-135deg);-webkit-transform:rotate(-135deg)}.uix-spinner-arrow-down{transform:rotate(45deg);-webkit-transform:rotate(45deg)}.uix-spinner-up{top:5px;width:13px;position:absolute;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;-o-user-select:none;user-select:none}.uix-spinner-up:hover .uix-spinner-arrow{border:solid #73c0ff;border-width:0 2px 2px 0}.uix-spinner-down{top:30px;width:13px;position:absolute;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;-o-user-select:none;user-select:none}.uix-spinner-down:hover .uix-spinner-arrow{border:solid #73c0ff;border-width:0 2px 2px 0}`]
            },] },
];
/** @nocollapse */
MatNumberSpinnerComponent.ctorParameters = () => [
    { type: ChangeDetectorRef }
];
MatNumberSpinnerComponent.propDecorators = {
    classSpinner: [{ type: Input, args: ["type",] }],
    value: [{ type: Input }],
    valueChange: [{ type: Output }],
    increase: [{ type: Input }],
    decrease: [{ type: Input }],
    fix: [{ type: Input }]
};
function MatNumberSpinnerComponent_tsickle_Closure_declarations() {
    /** @type {?} */
    MatNumberSpinnerComponent.prototype.classSpinner;
    /** @type {?} */
    MatNumberSpinnerComponent.prototype.value;
    /** @type {?} */
    MatNumberSpinnerComponent.prototype.valueChange;
    /** @type {?} */
    MatNumberSpinnerComponent.prototype.increase;
    /** @type {?} */
    MatNumberSpinnerComponent.prototype.decrease;
    /** @type {?} */
    MatNumberSpinnerComponent.prototype.fix;
    /** @type {?} */
    MatNumberSpinnerComponent.prototype.add;
    /** @type {?} */
    MatNumberSpinnerComponent.prototype.substract;
    /** @type {?} */
    MatNumberSpinnerComponent.prototype.parse;
    /** @type {?} */
    MatNumberSpinnerComponent.prototype.operation;
    /** @type {?} */
    MatNumberSpinnerComponent.prototype.cdr;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWF0LW51bWJlci1zcGlubmVyLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL3VpeC1tYXQtbnVtYmVyLXNwaW5uZXIvIiwic291cmNlcyI6WyJsaWIvbWF0LW51bWJlci1zcGlubmVyLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUNMLFNBQVMsRUFFVCxLQUFLLEVBQ0wsTUFBTSxFQUNOLFlBQVksRUFDWixpQkFBaUIsRUFDbEIsTUFBTSxlQUFlLENBQUM7QUFtQnZCLE1BQU07Ozs7SUFhSixZQUFvQixHQUFzQjtRQUF0QixRQUFHLEdBQUgsR0FBRyxDQUFtQjs0QkFaSixFQUFFOzJCQUVoQixJQUFJLFlBQVksRUFBRTt3QkFDZCxDQUFDO3dCQUNELENBQUM7bUJBQ04sQ0FBQzttQkFFbEIsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLEdBQUcsQ0FBQzt5QkFDVCxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsR0FBRyxDQUFDO3FCQUNuQixDQUFDLEdBQUcsSUFBSSxFQUFFLEVBQUUsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxLQUFLLENBQUMsQ0FBQzt5QkFDbkQsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLEdBQUcsSUFBSSxFQUFFLEVBQUUsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxDQUFDLENBQUM7S0FFdkI7Ozs7SUFFOUMsUUFBUTtRQUNOLElBQUksQ0FBQyxHQUFHLENBQUMsYUFBYSxFQUFFLENBQUM7S0FDMUI7Ozs7SUFFRCxFQUFFO1FBQ0EsdUJBQU0sTUFBTSxHQUFHLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLEtBQUssRUFBRSxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDcEQsSUFBSSxDQUFDLEtBQUssR0FBRyxNQUFNLENBQUMsSUFBSSxDQUFDLEtBQUssRUFBRSxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7UUFDL0MsSUFBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO0tBQ25DOzs7O0lBRUQsSUFBSTtRQUNGLHVCQUFNLE1BQU0sR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxLQUFLLEVBQUUsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDO1FBQzFELElBQUksQ0FBQyxLQUFLLEdBQUcsTUFBTSxDQUFDLElBQUksQ0FBQyxLQUFLLEVBQUUsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO1FBQy9DLElBQUksQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztLQUNuQzs7Ozs7SUFFRCxXQUFXLENBQUMsS0FBVTtRQUNwQixNQUFNLENBQUMsQ0FBQyxVQUFVLENBQUMsS0FBSyxDQUFDLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQztLQUM3Qzs7O1lBakRGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsd0JBQXdCO2dCQUNsQyxRQUFRLEVBQUU7Ozs7Ozs7Ozs7O0dBV1Q7Z0JBQ0QsTUFBTSxFQUFFLENBQUMscW5DQUFxbkMsQ0FBQzthQUNob0M7Ozs7WUFuQkMsaUJBQWlCOzs7MkJBcUJoQixLQUFLLFNBQUMsTUFBTTtvQkFDWixLQUFLOzBCQUNMLE1BQU07dUJBQ04sS0FBSzt1QkFDTCxLQUFLO2tCQUNMLEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBDb21wb25lbnQsXG4gIE9uSW5pdCxcbiAgSW5wdXQsXG4gIE91dHB1dCxcbiAgRXZlbnRFbWl0dGVyLFxuICBDaGFuZ2VEZXRlY3RvclJlZlxufSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xuaW1wb3J0IHsgTlVNQkVSX0ZPUk1BVF9SRUdFWFAgfSBmcm9tIFwiQGFuZ3VsYXIvY29tbW9uL3NyYy9pMThuL2Zvcm1hdF9udW1iZXJcIjtcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiBcInVpeC1tYXQtbnVtYmVyLXNwaW5uZXJcIixcbiAgdGVtcGxhdGU6IGBcbiAgPGRpdiBjbGFzcz1cInVpeC1zcGlubmVyLWFycm93c1wiPlxuICAgIDxkaXYgW25nQ2xhc3NdPVwiWyd1aXgtc3Bpbm5lci0nK2NsYXNzU3Bpbm5lcl1cIj5cbiAgICAgIDxpIGNsYXNzPVwidWl4LXNwaW5uZXItdXBcIiAoY2xpY2spPVwidXAoKVwiPlxuICAgICAgICA8ZGl2IGNsYXNzPVwidWl4LXNwaW5uZXItYXJyb3cgdWl4LXNwaW5uZXItYXJyb3ctdXBcIj48L2Rpdj5cbiAgICAgIDwvaT5cbiAgICAgIDxpIGNsYXNzPVwidWl4LXNwaW5uZXItZG93blwiIChjbGljayk9XCJkb3duKClcIj5cbiAgICAgICAgPGRpdiBjbGFzcz1cInVpeC1zcGlubmVyLWFycm93IHVpeC1zcGlubmVyLWFycm93LWRvd25cIj48L2Rpdj5cbiAgICAgIDwvaT5cbiAgICA8L2Rpdj5cbiAgPC9kaXY+XG4gIGAsXG4gIHN0eWxlczogW2A6Om5nLWRlZXAgdWl4LW1hdC1udW1iZXItc3Bpbm5lcitpbnB1dFt0eXBlPW51bWJlcl06Oi13ZWJraXQtaW5uZXItc3Bpbi1idXR0b24saW5wdXRbdHlwZT1udW1iZXJdOjotd2Via2l0LW91dGVyLXNwaW4tYnV0dG9uey13ZWJraXQtYXBwZWFyYW5jZTpub25lO21hcmdpbjowfS51aXgtc3Bpbm5lci1vdXRsaW5lIC51aXgtc3Bpbm5lci11cHt0b3A6MThweH0udWl4LXNwaW5uZXItb3V0bGluZSAudWl4LXNwaW5uZXItZG93bnt0b3A6NDdweH0udWl4LXNwaW5uZXItYXJyb3dze3Bvc2l0aW9uOmFic29sdXRlO3dpZHRoOjIwcHg7bGVmdDphdXRvO3JpZ2h0Oi0xMHB4O3RvcDotMjNweDt6LWluZGV4Ojk5OTk5OTk5OTk5OX0udWl4LXNwaW5uZXItYXJyb3d7Ym9yZGVyOnNvbGlkICM2MzYzNjM7Ym9yZGVyLXdpZHRoOjAgMnB4IDJweCAwO2Rpc3BsYXk6aW5saW5lLWJsb2NrO3BhZGRpbmc6M3B4fS51aXgtc3Bpbm5lci1hcnJvdy11cHt0cmFuc2Zvcm06cm90YXRlKC0xMzVkZWcpOy13ZWJraXQtdHJhbnNmb3JtOnJvdGF0ZSgtMTM1ZGVnKX0udWl4LXNwaW5uZXItYXJyb3ctZG93bnt0cmFuc2Zvcm06cm90YXRlKDQ1ZGVnKTstd2Via2l0LXRyYW5zZm9ybTpyb3RhdGUoNDVkZWcpfS51aXgtc3Bpbm5lci11cHt0b3A6NXB4O3dpZHRoOjEzcHg7cG9zaXRpb246YWJzb2x1dGU7Y3Vyc29yOnBvaW50ZXI7LXdlYmtpdC11c2VyLXNlbGVjdDpub25lOy1tb3otdXNlci1zZWxlY3Q6bm9uZTstbXMtdXNlci1zZWxlY3Q6bm9uZTstby11c2VyLXNlbGVjdDpub25lO3VzZXItc2VsZWN0Om5vbmV9LnVpeC1zcGlubmVyLXVwOmhvdmVyIC51aXgtc3Bpbm5lci1hcnJvd3tib3JkZXI6c29saWQgIzczYzBmZjtib3JkZXItd2lkdGg6MCAycHggMnB4IDB9LnVpeC1zcGlubmVyLWRvd257dG9wOjMwcHg7d2lkdGg6MTNweDtwb3NpdGlvbjphYnNvbHV0ZTtjdXJzb3I6cG9pbnRlcjstd2Via2l0LXVzZXItc2VsZWN0Om5vbmU7LW1vei11c2VyLXNlbGVjdDpub25lOy1tcy11c2VyLXNlbGVjdDpub25lOy1vLXVzZXItc2VsZWN0Om5vbmU7dXNlci1zZWxlY3Q6bm9uZX0udWl4LXNwaW5uZXItZG93bjpob3ZlciAudWl4LXNwaW5uZXItYXJyb3d7Ym9yZGVyOnNvbGlkICM3M2MwZmY7Ym9yZGVyLXdpZHRoOjAgMnB4IDJweCAwfWBdXG59KVxuZXhwb3J0IGNsYXNzIE1hdE51bWJlclNwaW5uZXJDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuICBASW5wdXQoXCJ0eXBlXCIpIGNsYXNzU3Bpbm5lcjogc3RyaW5nID0gXCJcIjtcbiAgQElucHV0KCkgdmFsdWU6IG51bWJlcjtcbiAgQE91dHB1dCgpIHZhbHVlQ2hhbmdlID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuICBASW5wdXQoKSBpbmNyZWFzZTogbnVtYmVyID0gMTtcbiAgQElucHV0KCkgZGVjcmVhc2U6IG51bWJlciA9IDE7XG4gIEBJbnB1dCgpIGZpeDogbnVtYmVyID0gMTtcblxuICBhZGQgPSAoYSwgYikgPT4gYSArIGI7XG4gIHN1YnN0cmFjdCA9IChhLCBiKSA9PiBhIC0gYjtcbiAgcGFyc2UgPSAoLi4uYXJncykgPT4gYXJncy5tYXAodmFsdWUgPT4gdGhpcy5oYW5kbGVQYXJzZSh2YWx1ZSkpO1xuICBvcGVyYXRpb24gPSAoZiwgZykgPT4gKC4uLmFyZ3MpID0+IHRoaXMuaGFuZGxlUGFyc2UoZyguLi5mKC4uLmFyZ3MpKSk7XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBjZHI6IENoYW5nZURldGVjdG9yUmVmKSB7fVxuXG4gIG5nT25Jbml0KCkge1xuICAgIHRoaXMuY2RyLmRldGVjdENoYW5nZXMoKTtcbiAgfVxuXG4gIHVwKCkge1xuICAgIGNvbnN0IHJlc3VsdCA9IHRoaXMub3BlcmF0aW9uKHRoaXMucGFyc2UsIHRoaXMuYWRkKTtcbiAgICB0aGlzLnZhbHVlID0gcmVzdWx0KHRoaXMudmFsdWUsIHRoaXMuaW5jcmVhc2UpO1xuICAgIHRoaXMudmFsdWVDaGFuZ2UuZW1pdCh0aGlzLnZhbHVlKTtcbiAgfVxuXG4gIGRvd24oKSB7XG4gICAgY29uc3QgcmVzdWx0ID0gdGhpcy5vcGVyYXRpb24odGhpcy5wYXJzZSwgdGhpcy5zdWJzdHJhY3QpO1xuICAgIHRoaXMudmFsdWUgPSByZXN1bHQodGhpcy52YWx1ZSwgdGhpcy5kZWNyZWFzZSk7XG4gICAgdGhpcy52YWx1ZUNoYW5nZS5lbWl0KHRoaXMudmFsdWUpO1xuICB9XG5cbiAgaGFuZGxlUGFyc2UodmFsdWU6IGFueSk6IG51bWJlciB7XG4gICAgcmV0dXJuICtwYXJzZUZsb2F0KHZhbHVlKS50b0ZpeGVkKHRoaXMuZml4KTtcbiAgfVxufVxuIl19